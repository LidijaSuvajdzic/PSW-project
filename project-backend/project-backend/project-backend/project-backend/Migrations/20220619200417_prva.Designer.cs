// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using project_backend.Models;

namespace project_backend.Migrations
{
    [DbContext(typeof(MyWebApiContext))]
    [Migration("20220619200417_prva")]
    partial class prva
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("project_backend.Models.FreeAppointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("DateFrom")
                        .HasColumnName("dateFrom");

                    b.Property<DateTime>("DateTo")
                        .HasColumnName("dateTo");

                    b.Property<int>("DoctorId")
                        .HasColumnName("doctorId");

                    b.Property<bool>("IsFree")
                        .HasColumnName("isFree");

                    b.HasKey("Id");

                    b.ToTable("freeAppointment");
                });

            modelBuilder.Entity("project_backend.Models.ReservedAppointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("DateFrom")
                        .HasColumnName("dateFrom");

                    b.Property<DateTime>("DateTo")
                        .HasColumnName("dateTo");

                    b.Property<int>("DoctorId")
                        .HasColumnName("doctorId");

                    b.Property<bool>("IsRated")
                        .HasColumnName("isRated");

                    b.Property<int>("PatientId")
                        .HasColumnName("patientId");

                    b.HasKey("Id");

                    b.ToTable("reservedAppointment");
                });

            modelBuilder.Entity("project_backend.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("userid");

                    b.Property<string>("Email")
                        .HasColumnName("email");

                    b.Property<string>("Firstname")
                        .HasColumnName("firstname");

                    b.Property<int>("HealthCardNumber")
                        .HasColumnName("healthcardnumber");

                    b.Property<string>("Lastname")
                        .HasColumnName("lastname");

                    b.Property<string>("Passwordd")
                        .HasColumnName("password");

                    b.Property<string>("Role")
                        .HasColumnName("role");

                    b.HasKey("UserId");

                    b.ToTable("users");
                });
#pragma warning restore 612, 618
        }
    }
}
